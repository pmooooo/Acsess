@startuml classes_acsess_project
set namespaceSeparator none
class "AcsessApiConfig" as acsess_api.apps.AcsessApiConfig {
  default_auto_field : str
  name : str
  ready()
}
class "AdminAcceptOrDenyBookingTestCase" as acsess_api.tests.test_admin_accept_or_deny_booking.AdminAcceptOrDenyBookingTestCase {
  accept_or_deny_booking_url : str
  booking
  client : Client
  pending_booking
  room
  user
  setUp(mock_send_reminder_email)
  test_accept_booking(mock_schedule_reminder_email, mock_schedule_check_in_reminder)
  test_deny_booking(mock_send_reminder_email)
  test_invalid_booking_id(mock_send_reminder_email)
  test_invalid_json(mock_send_reminder_email)
  test_missing_fields(mock_send_reminder_email)
}
class "AdminAcceptOrDenyBookingView" as acsess_api.views.AdminAcceptOrDenyBookingView {
  post(request)
}
class "AdminHelpTestCase" as acsess_api.tests.test_admin_help.AdminHelpTestCase {
  admin_help_url : str
  admin_user
  client : Client
  user
  setUp()
  test_admin_help_invalid_data()
  test_admin_help_success()
  test_admin_help_user_not_found()
}
class "AdminHelpView" as acsess_api.views.AdminHelpView {
  post(request)
}
class "BookingHistoryInline" as acsess_api.admin.BookingHistoryInline {
  can_delete : bool
  model
}
class "BookingInline" as acsess_api.admin.BookingInline {
  can_delete : bool
  model
}
class "CSEStaffProfileInline" as acsess_api.admin.CSEStaffProfileInline {
  can_delete : bool
  model
}
class "CSEStaffRegisterView" as acsess_api.views.CSEStaffRegisterView {
  post(request)
}
class "CSEStaffSerializer" as acsess_api.serializers.CSEStaffSerializer {
  user
  create(validated_data)
}
class "CancelBookingTestCase" as acsess_api.tests.test_cancel_booking.CancelBookingTestCase {
  cancel_booking_url : str
  client : Client
  create_booking_url : str
  room
  user
  create_booking()
  setUp()
  tearDown()
  test_cancel_booking_id_not_found()
  test_cancel_booking_invalid_booking_id()
  test_cancel_booking_missing_booking_id()
  test_cancel_booking_valid()
}
class "CancelBookingView" as acsess_api.views.CancelBookingView {
  post(request)
}
class "ChangePasswordTestCase" as acsess_api.tests.test_change_password.ChangePasswordTestCase {
  change_password_url : str
  client : Client
  user
  setUp()
  test_change_password_incorrect_current_password()
  test_change_password_missing_fields()
  test_change_password_user_not_found()
  test_change_password_valid()
}
class "ChangePasswordView" as acsess_api.views.ChangePasswordView {
  post(request)
}
class "CheckInView" as acsess_api.views.CheckInView {
  post(request)
}
class "CheckIntoBookingTestCase" as acsess_api.tests.test_check_in.CheckIntoBookingTestCase {
  booking
  booking_history
  check_in_url : str
  client : Client
  room
  user
  setUp()
  test_check_in_invalid_booking_id()
  test_check_in_invalid_json_data()
  test_check_in_missing_booking_id()
  test_check_in_valid()
}
class "ContactAdminTestCase" as acsess_api.tests.test_contact_admin.ContactAdminTestCase {
  client : Client
  contact_admin_url : str
  setUp()
  test_contact_admin_invalid_json()
  test_contact_admin_missing_fields()
  test_contact_admin_valid()
}
class "ContactAdminView" as acsess_api.views.ContactAdminView {
  post(request)
}
class "CreateHotdeskBookingTestCase" as acsess_api.tests.test_create_hotdesk_booking.CreateHotdeskBookingTestCase {
  client : Client
  create_hotdesk_booking_url : str
  hotdesk
  user
  setUp()
  test_create_hotdesk_booking_invalid_hotdesk_id()
  test_create_hotdesk_booking_invalid_json()
  test_create_hotdesk_booking_invalid_user_id()
  test_create_hotdesk_booking_missing_fields()
  test_create_hotdesk_booking_valid()
}
class "CreateHotdeskBookingView" as acsess_api.views.CreateHotdeskBookingView {
  post(request)
}
class "CreateRoomBookingTestCase" as acsess_api.tests.test_create_room_booking.CreateRoomBookingTestCase {
  client : Client
  create_room_booking_url : str
  room
  user
  setUp()
  test_create_room_booking_invalid_json()
  test_create_room_booking_invalid_room_id()
  test_create_room_booking_invalid_user_id()
  test_create_room_booking_missing_fields()
  test_create_room_booking_valid()
}
class "CreateRoomBookingView" as acsess_api.views.CreateRoomBookingView {
  post(request)
}
class "DownloadBookingHistoryTestCase" as acsess_api.tests.test_download_booking_history.DownloadBookingHistoryTestCase {
  booking1
  booking2
  booking_history1
  booking_history2
  client : Client
  cse_staff
  download_url : str
  hdr_student
  hotdesk
  room
  user1
  user2
  setUp()
  test_download_booking_history()
}
class "DownloadBookingHistoryView" as acsess_api.views.DownloadBookingHistoryView {
  get(request)
}
class "EditBookingTestCase" as acsess_api.tests.test_edit_booking.EditBookingTestCase {
  booking
  client : Client
  edit_booking_url : str
  end_time
  hotdesk
  hotdesk_booking
  room
  start_time
  user
  setUp()
  test_edit_booking_invalid_booking_id()
  test_edit_booking_invalid_json()
  test_edit_booking_missing_fields_end()
  test_edit_booking_missing_fields_start()
  test_edit_booking_valid()
  test_edit_hotdesk_booking_valid()
}
class "EditBookingView" as acsess_api.views.EditBookingView {
  post(request)
}
class "GetDataView" as acsess_api.views.GetDataView {
  post(request)
}
class "GetTableDataTestCase" as acsess_api.tests.test_get_table_data.GetTableDataTestCase {
  client : Client
  get_table_data_url : str
  user1
  user2
  setUp()
  test_invalid_json_data()
  test_invalid_table_name()
  test_missing_required_fields()
  test_object_does_not_exist()
  test_valid_request_and_condition()
  test_valid_request_or_condition()
}
class "HDRStudentProfileInline" as acsess_api.admin.HDRStudentProfileInline {
  can_delete : bool
  model
}
class "HDRStudentRegisterView" as acsess_api.views.HDRStudentRegisterView {
  post(request)
}
class "HDRStudentSerializer" as acsess_api.serializers.HDRStudentSerializer {
  user
  create(validated_data)
}
class "HotdeskInline" as acsess_api.admin.HotdeskInline {
  can_delete : bool
  model
}
class "LoginTestCase" as acsess_api.tests.test_login.LoginTestCase {
  client : Client
  email : str
  login_url : str
  password : str
  register_url : str
  token
  setUp()
  tearDown()
  test_login_invalid_credentials()
  test_login_invalid_email()
  test_login_invalid_password()
  test_login_missing_credentials()
  test_login_missing_email()
  test_login_missing_password()
  test_login_valid()
}
class "LoginView" as acsess_api.views.LoginView {
  permission_classes : tuple
  serializer_class : TokenObtainPairSerializer
  post(request)
}
class "Meta" as acsess_api.serializers.UserSerializer.Meta {
  extra_kwargs : dict
  fields : tuple
  model : User
}
class "Meta" as acsess_api.serializers.HDRStudentSerializer.Meta {
  fields : tuple
  model
}
class "Meta" as acsess_api.serializers.CSEStaffSerializer.Meta {
  fields : tuple
  model
}
class "Migration" as acsess_api.migrations.0001_initial.Migration {
  dependencies : list
  initial : bool
  operations : list
}
class "Migration" as acsess_api.migrations.0002_cse_staff_staff_email_hdr_student_student_email.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0003_cse_staff_user_hdr_student_user_and_more.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0004_remove_cse_staff_user_remove_hdr_student_user_and_more.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0005_cse_staff_user_hdr_student_user.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0006_alter_cse_staff_user_alter_hdr_student_user.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0007_room_booking.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0008_hotdesk.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0009_remove_booking_id_remove_booking_purpose_and_more.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0010_pending_booking_booking_id.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0011_rename_booking_id_pending_booking_booking.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0012_rename_room_booking_id_booking_booking_id_and_more.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0013_hotdesk_hotdesk_coordinates.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0014_booking_created_at_booking_updated_at_and_more.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0015_alter_booking_history_booking.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0016_cse_staff_otp_hdr_student_otp.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0017_booking_check_in_status_and_more.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0018_booking_checked_in_at_booking_checked_out_at.Migration {
  dependencies : list
  operations : list
}
class "Migration" as acsess_api.migrations.0019_remove_booking_checked_out_at_and_more.Migration {
  dependencies : list
  operations : list
}
class "PendingBookingInline" as acsess_api.admin.PendingBookingInline {
  can_delete : bool
  model
}
class "ResetPasswordView" as acsess_api.views.ResetPasswordView {
  {abstract}post(request)
}
class "ResetPasswordViewTests" as acsess_api.tests.test_reset_password.ResetPasswordViewTests {
  client : APIClient
  cse_staff
  cse_user
  hdr_student
  hdr_user
  new_password : str
  otp : str
  user_email : str
  user_password : str
  setUp()
  test_reset_password_invalid_otp()
  test_reset_password_no_otp_provided()
  test_reset_password_no_password_provided()
  test_reset_password_no_user()
  test_reset_password_valid_otp_cse_staff()
  test_reset_password_valid_otp_hdr_student()
  test_send_reset_code()
}
class "RoomInline" as acsess_api.admin.RoomInline {
  can_delete : bool
  model
}
class "SignUpTestCase" as acsess_api.tests.test_signup.SignUpTestCase {
  client : Client
  name : str
  password : str
  staff_email : str
  staff_register_url : str
  staff_role : str
  student_email : str
  student_register_url : str
  student_role : str
  zID : str
  setUp()
  tearDown()
  test_signup_staff_invalid_email()
  test_signup_staff_invalid_role()
  test_signup_staff_invalid_zID()
  test_signup_staff_missing_email()
  test_signup_staff_missing_name()
  test_signup_staff_missing_role()
  test_signup_staff_missing_zID()
  test_signup_staff_valid_contact()
  test_signup_student_invalid_email()
  test_signup_student_invalid_role()
  test_signup_student_invalid_zID()
  test_signup_student_missing_email()
  test_signup_student_missing_name()
  test_signup_student_missing_role()
  test_signup_student_missing_zID()
  test_signup_student_valid_contact()
}
class "UpdateUserRoleTestCase" as acsess_api.tests.test_update_user_role.UpdateUserRoleTestCase {
  admin_user
  client : Client
  cse_staff_group
  cse_staff_user
  hdr_student_group
  hdr_student_user
  update_user_role_url : str
  setUp()
  test_update_user_role_cse_staff_to_hdr_student()
  test_update_user_role_hdr_to_cse_staff()
  test_update_user_role_invalid_user()
  test_update_user_role_to_admin()
}
class "UpdateUserRoleView" as acsess_api.views.UpdateUserRoleView {
  post(request)
}
class "UserAdmin" as acsess_api.admin.UserAdmin {
  inlines : tuple
}
class "UserListView" as acsess_api.views.UserListView {
  queryset
  serializer_class
}
class "UserSerializer" as acsess_api.serializers.UserSerializer {
}
class "booking" as acsess_api.models.booking {
  booking_id : AutoField
  check_in_status : CharField
  checked_in_at : DateTimeField
  content_type : ForeignKey
  created_at : DateTimeField
  end_time : DateTimeField
  object_id : PositiveIntegerField
  room_or_hotdesk : GenericForeignKey
  start_time : DateTimeField
  state : CharField
  updated_at : DateTimeField
  user : ForeignKey
  save()
}
class "booking_history" as acsess_api.models.booking_history {
  booking : ForeignKey
  booking_history_id : AutoField
  check_in_status : CharField
  checked_in_at : DateTimeField
  content_type : ForeignKey
  created_at : DateTimeField
  end_time : DateTimeField
  object_id : PositiveIntegerField
  room_or_hotdesk : GenericForeignKey
  start_time : DateTimeField
  state : CharField
  updated_at : DateTimeField
  user : ForeignKey
}
class "cse_staff" as acsess_api.models.cse_staff {
  otp : CharField
  staff_email : CharField
  staff_faculty : CharField
  staff_name : CharField
  staff_no : AutoField
  staff_password : CharField
  staff_role : CharField
  staff_school : CharField
  staff_title : CharField
  staff_zid : CharField
  user : OneToOneField
  generate_otp(length)
  update_otp()
}
class "hdr_student" as acsess_api.models.hdr_student {
  otp : CharField
  student_degree : CharField
  student_email : CharField
  student_faculty : CharField
  student_name : CharField
  student_no : AutoField
  student_password : CharField
  student_role : CharField
  student_school : CharField
  student_zid : CharField
  user : OneToOneField
  generate_otp(length)
  update_otp()
}
class "hotdesk" as acsess_api.models.hotdesk {
  hotdesk_coordinates : ArrayField
  hotdesk_description : TextField
  hotdesk_floor : IntegerField
  hotdesk_id : AutoField
  hotdesk_location : CharField
  hotdesk_number : CharField
}
class "pending_booking" as acsess_api.models.pending_booking {
  booking : ForeignKey
  content_type : ForeignKey
  end_time : DateTimeField
  object_id : PositiveIntegerField
  pending_booking_id : AutoField
  room_or_hotdesk : GenericForeignKey
  start_time : DateTimeField
  user : ForeignKey
}
class "room" as acsess_api.models.room {
  room_capacity : IntegerField
  room_description : TextField
  room_id : AutoField
  room_location : CharField
  room_number : CharField
  room_utilities : CharField
}
acsess_api.models.booking --* acsess_api.admin.BookingInline : model
acsess_api.models.booking_history --* acsess_api.admin.BookingHistoryInline : model
acsess_api.models.cse_staff --* acsess_api.admin.CSEStaffProfileInline : model
acsess_api.models.cse_staff --* acsess_api.serializers.CSEStaffSerializer.Meta : model
acsess_api.models.hdr_student --* acsess_api.admin.HDRStudentProfileInline : model
acsess_api.models.hdr_student --* acsess_api.serializers.HDRStudentSerializer.Meta : model
acsess_api.models.hotdesk --* acsess_api.admin.HotdeskInline : model
acsess_api.models.pending_booking --* acsess_api.admin.PendingBookingInline : model
acsess_api.models.room --* acsess_api.admin.RoomInline : model
acsess_api.serializers.UserSerializer --* acsess_api.serializers.CSEStaffSerializer : user
acsess_api.serializers.UserSerializer --* acsess_api.serializers.HDRStudentSerializer : user
acsess_api.serializers.UserSerializer --* acsess_api.views.UserListView : serializer_class
@enduml
